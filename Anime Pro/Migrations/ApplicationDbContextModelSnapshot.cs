// <auto-generated />
using System;
using Anime_Pro;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Anime_Pro.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Anime_Pro.Models.Entidades.Estudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estudios");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.Personaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biografia")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<DateTime>("FechaLanzamiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.Serie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AficheUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sinopsis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("EstudioId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.SerieGenero", b =>
                {
                    b.Property<int>("SerieId")
                        .HasColumnType("int");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.HasKey("SerieId", "GeneroId");

                    b.HasIndex("GeneroId");

                    b.ToTable("SeriesGeneros");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.SeriePersonaje", b =>
                {
                    b.Property<int>("PersonajeId")
                        .HasColumnType("int");

                    b.Property<int>("SerieId")
                        .HasColumnType("int");

                    b.HasKey("PersonajeId", "SerieId");

                    b.HasIndex("SerieId");

                    b.ToTable("SeriesPersonajes");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.Serie", b =>
                {
                    b.HasOne("Anime_Pro.Models.Entidades.Estudio", "Estudio")
                        .WithMany("Series")
                        .HasForeignKey("EstudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudio");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.SerieGenero", b =>
                {
                    b.HasOne("Anime_Pro.Models.Entidades.Genero", "Genero")
                        .WithMany("SeriesGeneros")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anime_Pro.Models.Entidades.Serie", "Serie")
                        .WithMany("SeriesGeneros")
                        .HasForeignKey("SerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Serie");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.SeriePersonaje", b =>
                {
                    b.HasOne("Anime_Pro.Models.Entidades.Personaje", "Personaje")
                        .WithMany("SeriesPersonajes")
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anime_Pro.Models.Entidades.Serie", "Serie")
                        .WithMany("SeriesPersonajes")
                        .HasForeignKey("SerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personaje");

                    b.Navigation("Serie");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.Estudio", b =>
                {
                    b.Navigation("Series");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.Genero", b =>
                {
                    b.Navigation("SeriesGeneros");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.Personaje", b =>
                {
                    b.Navigation("SeriesPersonajes");
                });

            modelBuilder.Entity("Anime_Pro.Models.Entidades.Serie", b =>
                {
                    b.Navigation("SeriesGeneros");

                    b.Navigation("SeriesPersonajes");
                });
#pragma warning restore 612, 618
        }
    }
}
